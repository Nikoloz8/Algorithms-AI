# largest = a 
# if largest < b:
#     largest = b 
# if largest < c:
#     largest = c 
# if largest < d:
#     largest = d
# if largest < e:
#     largest = e
     
# print(largest)


# T = 5 (მინიჭებათა მაქსიმალური რაოდენობა)
# განსხვავებული დალაგებების რაოდენობა არის 5! = 120 (4 ის შემთხვევაში იქნებოდა 4! = 24)

# თითოეულ დალაგებას მივანიჭოთ 1/120 - ი მნიშვნელობა

# როცა a მაქსიმალურია მაშინ გვექნება 4! = 24 დალაგება, შესაბამისად სადაც a მაქსიმალურია მოგვცემს 24/120 = 1/5, რომლითაც ქვემოთ შევქმნით სისტემის პირველ სტრიქონს.    გაითვალისწინეთ - T = 1 !!!

#როცა მაქსიმალური არის b, მაშინ კოდში გვექნება ორი მინიჭება და ეს სისტემის მეორე სტრიქონს შეავსებს ისევ მნიშვნელობით 24/120 = 1/5, რადგან კვლავ განვიხილავთ დანარჩენი ოთხი ელემენტის შესაძლო დალაგების ვარიანტებს (ისევ შემიძლია a, c, d ვატრიალო)  გაითვალისწინეთ - T = 2 !!! (მინიჭებათა მაქსიმალური რაოდენობა)

#როცა მაქსიმალური არის c, მაშინ შესაძლო დალაგებების რაოდენობა იცვლება, რადგან ასევე იცვლება შესაძლო მინიჭებების რაოდენობა. განიხილება ორი შემთხვევა, როცა a > b (ამ დროს გვექნება ორი მინიჭება) და როცა b > a (ამ დროს გვექნება სამი მინიჭება). პირველი შემთხვევისთვის შესაძლო მოსალოდნელობის რაოდენობა გამოდის T = 2 ან T = 3. 




# {T = 1 -       1/5   =   24/120   (თუ a მაქსიმალურია, მაშინ დანარჩენი 4 რიცხვის გადანაცვლებას განვიხილავთ, რაც 4 - ის ფაქტორიალია, შესაბამისად 4! ეფარდება მაქსიმალური გადანაცვლებების რაოდენობას, ანუ 5! - ს.)

    # { T = 2 -      1/5 + 1/5 * 1/4 (თუ b მაქსიმალურია, მაშინ განვიხილავთ დანარჩენი 4 რიცხვის გადანაცვლებას, რაც 4! - ის ფაქტორიალია, იგი ეფართება მაქსიმალური გადანაცვლებების რაოდენობას, ანუ 5! - ს.)


# { T = 3 or T = 2 
    
    
# {
    
    
# {






# დავასრულებ!!
    

